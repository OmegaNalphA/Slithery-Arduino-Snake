#include <QueueArray.h>

  // 2-dimensional array of row pin numbers:
  const int row[8] = {
  // 2, 7, 19, 5, 13, 18, 12, 16
  16, 12, 18, 13, 5, 19, 7, 2
  };

  // 2-dimensional array of column pin numbers:
  const int col[8] = {
  6, 11, 10, 3, 17, 4, 8, 9
  };


// 2-dimensional array of pixels:
int pixels[8][8];

// cursor position:
int x = 5;
int y = 5;


class Coord{
public:
  Coord(int xPos, int yPos){x = xPos; y = yPos;};
  int x;
  int y;
};

int direction = 0;
unsigned long oldTime = 0;
const long interval = 500;
unsigned long newTime;
int count = 0;
QueueArray<Coord*> body;

void setup() {
  // initialize the I/O pins as outputs
  // iterate over the pins:
  for (int thisPin = 0; thisPin < 8; thisPin++) {
    // initialize the output pins:
    pinMode(col[thisPin], OUTPUT);
    pinMode(row[thisPin], OUTPUT);
    // take the col pins (i.e. the cathodes) high to ensure that
    // the LEDS are off:
    digitalWrite(col[thisPin], LOW);
    digitalWrite(row[thisPin], HIGH);
  }

  randomSeed(analogRead(0));

  // initialize the pixel matrix:
  for (int x = 0; x < 8; x++) {
    for (int y = 0; y < 8; y++) {
      pixels[x][y] = 0;
    }
  }
  pixels[0][7] = 1;
  /*pixels[2][3] = 1;
  pixels[5][7] = 1;
  pixels[5][4] = 1;*/
  Coord* c = new Coord(0, 7);
  body.push(c);
  int random1 = 0;
  int random2 = 7;
  while(random2==7){
    random1 = random(800)%8;
    random2 = random(800)%8;
  }
  pixels[random1][random2] = 1;

}

void loop() {
  /*for(int i=0; i<8; i++){
    pixels[i][i] = 1;
  }*/
  if((newTime-oldTime)>=interval){
    newTime = oldTime;
    
  }
  printScreen();
}

void printScreen(){
  for(int i=0; i<8; i++){
    digitalWrite(col[i], LOW);
    digitalWrite(row[i], HIGH);
  }
  digitalWrite(col[count%8], HIGH);
  for(int i=0; i<8; i++){
    if(pixels[count%8][i]==1){
      digitalWrite(row[i], LOW);
    }
  }
  count++;
  count = count % 8;
  delay(1);
}

//void readSensors() {
  /*// turn off the last position:
  pixels[x][y] = HIGH;
  // read the sensors for X and Y values:
  x = 7 - map(analogRead(A0), 0, 1023, 0, 7);
  y = map(analogRead(A1), 0, 1023, 0, 7);
  // set the new pixel position low so that the LED will turn on
  // in the next screen refresh:
  pixels[x][y] = LOW;*/
//}
